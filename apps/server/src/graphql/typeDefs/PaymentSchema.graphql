extend type Query {
	getIsConnected: Balance
	createStripeAccessLink: String
}

extend type Mutation {
	connectExpressPayment(input: ConnectExpressInput!): String!
	generatePaymentIntent(input: generatePaymentIntentInput!): PaymentIntent!
	generateStripePayout: Boolean!
	confirmPayment(input: ConfirmPaymentInput!): Boolean!
}

input ConfirmPaymentInput {
	payment: ID!
}

type Payment {
	_id: ID!
	amount: Float!
	patron: ID!
	tip: Float!
	splitType: SplitType
	discount: Float
	paid: Boolean!
}

input generatePaymentIntentInput {
	payment: ID!
}

input ConnectExpressInput {
	business_type: BusinessType!
}

type Balance {
	balanceAvailable: Float!
	balancePending: Float!
	balanceCurrency: String!
	name: String
	url: String
}

type PaymentIntent {
	paymentIntent: ID!
	clientSecret: ID
	amount: Float!
	currency: String!
}

enum BusinessType {
	individual
	company
}

enum ISOCountry {
	US
	BR
}
