extend type Query {
	getCheckoutByID(input: GetById!): Checkout!
	getCheckoutsByBusiness(page: Int!, pageSize: Int!): [Checkout!]!
	getOrdersByCheckout(input: GetById!): Checkout!
	getPaidCheckoutByDate(input: GetPaidCheckout!): PaidCheckoutRes
	getPaidCheckoutToAndFromDate(input: GetPaidCheckoutToAndFrom!): PaidCheckoutRes
}

extend type Mutation {
	makeCheckoutFullPayment(input: MakeCheckoutFullPaymentInput!): Checkout!
	makeCheckoutPayment(input: MakeCheckoutPaymentInput!): Checkout!
	customerRequestSplit(input: CustomerRequestSplitInput!): Checkout!
	customerRequestPayFull(input: CustomerRequestPayFullInput!): Checkout!
	deleteCheckoutData(ids: [ID!]!): DeleteResult!
}

type DeleteResult {
	acknowledged: Boolean!
	deletedCount: Int!
}

type Checkout {
	_id: ID!
	business: ID!
	tab: ID!
	status: CheckoutStatusKeys!
	paid: Boolean!
	orders: [OrderDetail]!
	payments: [Payment]!
	subTotal: Float!
	serviceFee: Float!
	serviceFeeValue: Float!
	tip: Float
	tipValue: Float
	discount: Float
	tax: Float!
	total: Float!
	totalPaid: Float!
	splitType: SplitType
	created_date: String!
	updated_at: String
}

input CustomerRequestPayFullInput {
	patron: ID!
	checkout: ID!
	tip: Float!
}

input MakeCheckoutPaymentInput {
	checkout: ID!
	payment: ID!
}

input MakeCheckoutFullPaymentInput {
	checkout: ID!
	amount: Float!
	tip: Float!
	patron: ID!
	discount: Float!
	splitType: SplitType
	paymentMethod: String
}

input CustomerRequestSplitInput {
	checkout: ID!
	splitType: SplitType!
	customSplit: [CustomSplitInput!]
	selectedUsers: [String!]!
	tip: Float!
}

input GetPaidCheckout {
	type: DateType!
}

input GetPaidCheckoutToAndFrom {
	toDate: String!
	fromDate: String!
}

enum DateType {
	SevenDays
	ThirtyDays
	NinetyDays
	AllTime
}

type AveragePerDay {
	_id: String!
	totalAmount: Float!
}

type PaidCheckoutRes {
	sortBy: String!
	data: [AveragePerDay]!
	total: Float!
}

input CustomSplitInput {
	patron: ID!
	amount: Float!
}

enum CheckoutStatusKeys {
	Pending
	Paid
	PartiallyPaid
	Canceled
}

enum SplitType {
	ByPatron
	Equally
	Custom
	Full
}
