extend type Query {
	getTabByID(input: GetById!): Tab!
	getAllTabsByBusinessID: [Tab]
	getAllOpenTabsByBusinessID: [Tab]
}

extend type Mutation {
	createTab(input: CreateTabInput!): Tab!
	updateTab(input: UpdateTabInput!): Tab!
	deleteTab(input: GetById!): Tab
	requestCloseTab(input: GetById): Tab!
	updateCustomerUpdateTabType(input: UpdateCustomerUpdateTabTypeInput!): Tab
}

input UpdateCustomerUpdateTabTypeInput {
	tab: ID!
	type: TakeoutDelivery!
}

type Tab {
	_id: ID!
	checkout: ID
	table: Table
	admin: ID!
	orders: [OrderDetail!]!
	status: TabStatus!
	users: [User!]
	cartItems: [ID!]!
	type: TakeoutDelivery
}

input CreateTabInput {
	table: ID!
	admin: ID
	totalUsers: Int!
}

input UpdateTabInput {
	_id: ID!
	status: TabStatus!
}

enum TabStatus {
	Open
	Closed
	Pendent
}
