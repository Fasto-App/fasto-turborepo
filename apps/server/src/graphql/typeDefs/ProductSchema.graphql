extend type Query {
	getAllProductsByBusinessID: [Product!]!
	getProductByID(productID: ID!): Product!
	getMostSellingProducts: [Product]
}

extend type Mutation {
	updateProductByID(input: UpdateProductInput!): Product!
	createProduct(input: CreateProductInput!): Product!
	deleteProduct(id: ID!): RequestResponseOK
}

type Product {
	_id: ID!
	name: String!
	description: String
	price: Int!
	imageUrl: String
	addonsID: [ID]
	category: Category
	quantity: Int
	totalOrdered: Int
	currency: Currency
	paused: Boolean
	blockOnZeroQuantity: Boolean
}

input CreateProductInput {
	name: String!
	description: String
	price: Int!
	file: Upload
	addons: [CreateProductInput]
	category: ID!
	quantity: Int
	paused: Boolean!
	blockOnZeroQuantity: Boolean!
}

input UpdateProductInput {
	_id: ID!
	name: String!
	description: String
	price: Int!
	file: Upload
	category: ID!
	quantity: Int
	paused: Boolean!
	blockOnZeroQuantity: Boolean!
}

enum Currency {
	USD
	BRL
}
